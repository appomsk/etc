# ====================== GENERAL ======================
# Import additional configuration files

import = [
    "~/.config/alacritty/gruvbox_material_medium_dark.toml"
]

# Working directory
# working_directory = "None"  # Default: "None"

# Live config reload (changes require restart)
# live_config_reload = true  # Default: true

# The path of your favorite shell
[shell]
# Example
program = "/bin/zsh"
args = ["-l"]

# ====================== ENV ======================
[env]
#  Example

WINIT_X11_SCALE_FACTOR = "1.0"

# ====================== WINDOW ======================
[window]

## Window dimensions
#dimensions = { columns = 0, lines = 0 }  # Default: columns = 0, lines = 0
#
## Window startup position
#position = "None"  # Default: "None"
#
## Blank space added around the window in pixels
#padding = { x = 0, y = 0 }  # Default: x = 0, y = 0
#
## Spread additional padding evenly around the terminal content
#dynamic_padding = false  # Default: false

# Window decorations
decorations = "Transparent"  # Default: "Full"

# TODO Turn on|off transparency, more/less
## Opacity
#opacity = 1.0  # Default: 1.0
#
## Request compositor to blur content behind transparent windows.
#blur = false  # Default: false
#
## Startup mode (changes require restart)
#startup_mode = "Windowed"  # Default: "Windowed"
#
## Window title
#title = "Alacritty"  # Default: "Alacritty"
#
## Allow terminal applications to change Alacritty's window title.
#dynamic_title = true  # Default: true
#
## Window class (Linux/BSD only)
#class = { instance = "Alacritty", general = "Alacritty" }  # Default: instance = "Alacritty", general = "Alacritty"

# Override the variant of the System theme/GTK theme/Wayland client side decorations.
decorations_theme_variant = "Dark"  # Default: "None"

# Prefer resizing window by discrete steps equal to cell dimensions.
resize_increments = true  # Default: false

# Make Option key behave as Alt.
#option_as_alt = "None"  # Default: "None"

# ====================== SCROLING ======================
[scrolling]

# Maximum number of lines in the scrollback buffer
history = 1000  # Default: 10000

# Number of lines scrolled for every input scroll increment
multiplier = 3  # Default: 3


# ====================== FONT ======================
[font]

# Normal font style
normal = { family = "UbuntuSansMono Nerd Font Mono", style = "Regular" }  # Default for Linux/BSD: "monospace", Regular

# Bold font style
bold = { style = "Medium" }  # Inherits family from normal, Default style: Bold

# Italic font style
italic = { style = "Italic" }  # Inherits family from normal, Default style: Italic

# Bold Italic font style
bold_italic = { style = "Bold Italic" }  # Inherits family from normal, Default style: Bold Italic

# Font size in points
size = 14.55555 # Default: 11.25

# Offset is extra space around each character
offset = { x = 0, y = -1 }  # Default: x = 0, y = 0

# Glyph offset determines the locations of the glyphs within their cells
glyph_offset = { x = 0, y = 0 }  # Default: x = 0, y = 0

# Use built-in font for box drawing characters
builtin_box_drawing = true  # Default: true

# ====================== COLORS ======================
[colors]
indexed_colors = [] # Default

# Transparent background colors
transparent_background_colors = true  # Default

# Draw bold text with bright colors
draw_bold_text_with_bright_colors = true 

# ====================== BELL ======================
[bell]

# Visual bell animation effect for flashing the screen when the visual bell is rung.
animation = "Linear"  # Default: "Linear"

# Duration of the visual bell flash in milliseconds
duration = 0  # Default: 50

# Visual bell animation color
color = "#000000"  # Default: "#ffffff"

# Command executed when the bell is rung
command = "None"  # Default: "None"

# ====================== SELECTION ======================
[selection]

# Characters that are used as separators for "semantic words" in Alacritty
semantic_escape_chars = ",│`|:\"' ()[]{}<>\\t"  # Default: ",│`|:\"' ()[]{}<>\\t"

# When set to true, selected text will be copied to the primary clipboard
save_to_clipboard = false  # Default: false

# ====================== CURSOR ======================
[cursor]

# Cursor style
#style = { shape = "Block", blinking = "Off" }  # Default: shape = "Block", blinking = "Off"
#
## Vi mode cursor style (falls back to the active value of the normal cursor if "None")
#vi_mode_style = "None"  # Default: "None"
#
## Cursor blinking interval in milliseconds
#blink_interval = 750  # Default: 750
#
## Time after which cursor stops blinking, in seconds
#blink_timeout = 5  # Default: 5
#
## When true, the cursor will be rendered as a hollow box when the window is not focused
#unfocused_hollow = true  # Default: true

# Thickness of the cursor relative to the cell width
thickness = 0.25  # Default: 0.15

# ====================== TERMINAL ======================
[terminal]

# Controls the OSC 52 behavior for clipboard interactions
osc52 = "OnlyCopy"  # Default: "OnlyCopy"

# ====================== MOUSE ======================
[mouse]

# When true, the cursor is temporarily hidden when typing
hide_when_typing = true  # Default: false

# Mouse bindings (actual bindings need to be defined as per user preference)
# Example
bindings = [
    # { mouse = "Right", mods = "Control", action = "Paste" },
]

# ====================== HINTS ======================
[hints]

# Define the keys used for hint labels
alphabet = "jfkdls;ahgurieowpq"  # Default: "jfkdls;ahgurieowpq"

[[hints.enabled]]
command = "xdg-open" # On Linux/BSD
# command = "open" # On macOS
# command = { program = "cmd", args = [ "/c", "start", "" ] } # On Windows
hyperlinks = true
post_processing = true
persist = false
mouse.enabled = true
binding = { key = "U", mods = "Control|Shift" }
regex = "(ipfs:|ipns:|magnet:|mailto:|gemini://|gopher://|https://|http://|news:|file:|git://|ssh:|ftp://)[^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"

# ====================== KEYBOARD ======================
[keyboard]
# Example
bindings = [
    { key = "N", mods = "Control|Shift", action = "CreateNewWindow" },
    # { key = "L", mods = "Control|Shift", chars = "l" },
]

