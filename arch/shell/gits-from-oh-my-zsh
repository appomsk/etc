## from oh-my-zsh
# gaa         =	git add --all
# gacm        =	git commit -a -m
# gama        =	git am --abort
# gamc        =	git am --continue
# gam         =	git am
# gamscp      =	git am --show-current-patch
# gams        =	git am --skip
# ga          =	noglob git add 
# gapa        =	git add --patch
# gap         =	git apply
# gapt        =	git apply --3way
# gau         =	git add --update
# gav         =	git add --verbose
# gba         =	git branch -a
# gbda        =	git branch --no-color --merged | command grep -vE "^([+*]|\s...
# gbd         =	git branch -d
# gbD         =	git branch -D
# gb          =	git branch
# gbl         =	git blame -b -w
# gbnm        =	git branch --no-merged
# gbr         =	git branch --remote
# gbsb        =	git bisect bad
# gbsg        =	git bisect good
# gbs         =	git bisect
# gbsr        =	git bisect reset
# gbss        =	git bisect start
# gca         =	git commit -v -a
# gca!        =	git commit -v -a --amend
# gcan!       =	git commit -v -a --no-edit --amend
# gcans!      =	git commit -v -a -s --no-edit --amend
# gcas        =	git commit -a -s
# gcasm       =	git commit -a -s -m
# gcb         =	git checkout -b
# gcd         =	git checkout $(git_develop_branch)
# gcf         =	git config --list
# gc          =	git commit -v
# gc!         =	git commit -v --amend
# gclean      =	git clean -id
# gcl         =	git clone --recurse-submodules
# gcma        =	git checkout master
# gcm         =	git commit -m
# gcmsg       =	git commit -m
# gcn!        =	git commit -v --no-edit --amend
# gco         =	git checkout
# gcor        =	git checkout --recurse-submodules
# gcount      =	git shortlog -sn
# gcpa        =	git cherry-pick --abort
# gcpc        =	git cherry-pick --continue
# gcp         =	git cherry-pick
# gcs         =	git commit -S
# gcsm        =	git commit -s -m
# gcss        =	git commit -S -s
# gcssm       =	git commit -S -s -m
# gdca        =	git diff --cached
# gdct        =	git describe --tags $(git rev-list --tags --max-count
# gdcw        =	git diff --cached --word-diff
# gd          =	git diff
# gds         =	git diff --staged
# gdt         =	git diff-tree --no-commit-id --name-only -r
# gdup        =	git diff @{upstream}
# gdw         =	git diff --word-diff
# gfa         =	git fetch --all --prune --jobs
# gfg         =	git ls-files | grep
# gf          =	git fetch
# gfo         =	git fetch origin
# gga         =	git gui citool --amend
# gg          =	git gui citool
# ggpull      =	git pull origin "$(git_current_branch)"
# ggpush      =	git push origin "$(git_current_branch)"
# ggsup       =	git branch --set-upstream-to
# ghh         =	git help
# gignored    =	git ls-files -v | grep "^[[:lower:]]"
# gignore     =	git update-index --assume-unchanged
# gke         =	\gitk --all $(git log -g --pretty
# gk          =	\gitk --all --branches &!
# glgga       =	git log --graph --decorate --all
# glgg        =	git log --graph
# glg         =	git log --stat
# gl          =	git pull
# glgm        =	git log --graph --max-count
# glgp        =	git log --stat -p
# glod        =	git log --graph --pretty
# glods       =	git log --graph --pretty
# gloga       =	git log --oneline --decorate --graph --all
# glog        =	git log --oneline --decorate --graph
# glo         =	git log --oneline --decorate
# glola       =	git log --graph --pretty
# glol        =	git log --graph --pretty
# glols       =	git log --graph --pretty
# glp         =	_git_log_prettily
# glum        =	git pull upstream $(git_main_branch)
# gma         =	git merge --abort
# gm          =	git merge
# gmom        =	git merge origin/$(git_main_branch)
# gmtl        =	git mergetool --no-prompt
# gmtlvim     =	git mergetool --no-prompt --tool
# gmum        =	git merge upstream/$(git_main_branch)
# gpd         =	git push --dry-run
# gpf!        =	git push --force
# gpf         =	git push --force-with-lease
# gp          =	git push
# gpoat       =	git push origin --all && git push origin --tags
# gpr         =	git pull --rebase
# gpristine   =	git reset --hard && git clean -dffx
# gpsup       =	git push --set-upstream origin $(git_current_branch)
# gpu         =	git push upstream
# gpv         =	git push -v
# gra         =	git remote add
# grba        =	git rebase --abort
# grbc        =	git rebase --continue
# grbd        =	git rebase $(git_develop_branch)
# grb         =	git rebase
# grbi        =	git rebase -i
# grbm        =	git rebase $(git_main_branch)
# grbo        =	git rebase --onto
# grbom       =	git rebase origin/$(git_main_branch)
# grbs        =	git rebase --skip
# grev        =	git revert
# gr          =	git remote
# grh         =	git reset
# grhh        =	git reset --hard
# grmc        =	git rm --cached
# grm         =	git rm
# grmv        =	git remote rename
# groh        =	git reset origin/$(git_current_branch) --hard
# grrm        =	git remote remove
# grset       =	git remote set-url
# grs         =	git restore
# grss        =	git restore --source
# grst        =	git restore --staged
# grt         =	cd "$(git rev-parse --show-toplevel || echo .)"
# gru         =	git reset --
# grup        =	git remote update
# grv         =	git remote -v
# gsb         =	git status -sb
# gsd         =	git svn dcommit
# gsh         =	git show
# gsi         =	git submodule init
# gsps        =	git show --pretty
# gsr         =	git svn rebase
# gss         =	git status -s
# gstaa       =	git stash apply
# gsta        =	git stash push
# gstall      =	git stash --all
# gstc        =	git stash clear
# gstd        =	git stash drop
# gst         =	git status
# gstl        =	git stash list
# gstp        =	git stash pop
# gsts        =	git stash show --text
# gsu         =	git submodule update
# gswc        =	git switch -c
# gswd        =	git switch $(git_develop_branch)
# gsw         =	git switch
# gswm        =	git switch $(git_main_branch)
# gtl         =	gtl(){ git tag --sort
# gts         =	git tag -s
# gtv         =	git tag | sort -V
# gunignore   =	git update-index --no-assume-unchanged
# gunwip      =	git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1
# gupa        =	git pull --rebase --autostash
# gupav       =	git pull --rebase --autostash -v
# gup         =	git pull --rebase
# gupv        =	git pull --rebase -v
# gwch        =	git whatchanged -p --abbrev-commit --pretty
# gwip        =	git add -A; git rm $(git ls-files --deleted) 2> /dev/null; g...
