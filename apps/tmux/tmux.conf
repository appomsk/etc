# vim: ft=tmux fdm=marker

# {{{ Env

# {{{ VARS TODO

# check wsl start with env command

# if-shell -b 'test -z "$ETC"' { 
#   display "hello" 
# }

# ~/usr/lib/tmux/

# }}}
# {{{ Prefix key

unbind-key C-b
set -g prefix C-Space
bind-key C-Space send-prefix # press two times for C-Space to terminal
bind-key Space last-window   # most often?
# check sensible 

# }}}
# {{{ Global tweaks

# set -g default-terminal "screen-256color"
set -g xterm-keys on

# ModifyOtherKeys
set -s extended-keys always
set -as terminal-features 'xterm*:extkeys'

# nvim advises
set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -g focus-events on
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# The server exist if no clients. Good for windows. 
# For linux for me there's no affect - yakuake always, but for vm?
set -g exit-empty off

# error, if there are no tmux sessions
# set repeat-time 1000

# no need?
set -g default-shell /bin/zsh

set -g mouse on

set -g display-time 2000
set -g display-panes-time 3000
set -g history-limit 10000

# CHECK (it is in tmux-sensible plugin
set -sg escape-time 0
# set -sg escape-time 250

# }}}

# }}}
# {{{ Theme

#set -g @plugin 'hasundue/tmux-gruvbox-material'
#set -g @gruvbox-material_theme 'dark' # or 'light'
#set -g @gruvbox-material_contrast 'medium'
# with my changes ~/etc/conf/misc/

# TODO $LIB doesnot work in WSL
source-file $ETC/apps/tmux/tmux-dark-medium.conf

# }}}
# {{{ Status line

set -g set-titles on
# IN .ZSHRC
# Set window title string
#  #H  Hostname of local host
#  #I  Current window index
#  #P  Current pane index
#  #S  Session name
#  #T  Current window title
#  #W  Current window name
#  #(pwd) current path
#  #   A literal ‘#’
# set -g set-titles-string "[#W] #(run-shell 'echo hi')"

# Automatically set window title
setw -g automatic-rename

set -g monitor-activity on
set -g visual-activity on

# }}}
# {{{ Copy mode

unbind-key [

# suspend client. If you (as me) use tmux as shell in terminal then
# after suspending you need find out PID and `kill -CONT <PID>`
unbind-key C-z
bind-key C-z copy-mode
# bind-key Escape copy-mode

# TODO vv - for V
# ESC & ALt-C to return (now Enter and Ctrl-C

bind-key Up copy-mode \; send-keys Up # PageUp by default
unbind-key p
bind-key p paste-buffer
setw -g mode-keys vi
# bind-key -t vi-copy 'R' rectangle-toggle
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
bind-key -T copy-mode-vi 'R' send -X rectangle-toggle
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

# to tmux-yank (plugin)
# bind-key C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# bind-key C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# set -g terminal-overrides  "*:Cs=\033]50;CursorShape=2\007"
# set -g terminal-overrides "*:Csr=\033]50;CursorShape=0\007"

# }}}
# {{{ Windows & Panes

set -g base-index 1
setw -g pane-base-index 1

# bind-key is alias to bind-key
bind-key C-t new-window -c "#{pane_current_path}"
bind-key C-w confirm-before -p "kill-window #W? (y/n)" kill-window
# d was detach without confirmation. D is possible to use
bind-key -T prefix d confirm-before -p "kill-window #W? (y/n)" kill-window

# bind-key -T prefix o select-pane -t :.+
bind-key O last-window

bind-key | split-window -h -c "#{pane_current_path}" -l 47%
bind-key '\' split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}" 
bind-key c new-window -c "#{pane_current_path}"

bind-key r source-file ~/.tmux.conf\; display "Reloaded!"

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h previous-window
bind-key -r C-l next-window

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
bind-key -n 'M-\' if-shell "$is_vim" 'send-keys M-\\'  'select-pane -l'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

#bind-key -n S-Left previous-window
#bind-key -n S-Right next-window
bind-key -n C-PgUp previous-window
bind-key -n C-PgDn next-window

bind-key -n C-S-PgUp swap-window -t -1 \; previous-window
bind-key -n C-S-PgDn swap-window -t +1 \; next-window

bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5 

# }}}
# {{{ Plugins 

# {{{2 BEGIN
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

# Install with <prefix>I, Update <prefix>U

# Here is a lot of plugins:
# https://github.com/tmux-plugins/list

set -g @plugin 'tmux-plugins/tpm'

# }}}
# {{{ Sensible

set -g @plugin 'https://github.com/tmux-plugins/tmux-sensible'

# }}}
# {{{ TPM Plugins

# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "               \
  tmux-plugins/tmux-yank            \
  tmux-plugins/tmux-open            \
  tmux-plugins/tmux-resurrect       \
  tmux-plugins/tmux-continuum       \
"
# Check someday
# https://github.com/tmux-plugins/tmux-sensible
# https://github.com/tmux-plugins/tmux-pain-control
# https://github.com/abhinav/tmux-fastcopy
# https://github.com/CrispyConductor/tmux-copy-toolkit
# https://github.com/jaclu/tmux-menus
# https://github.com/noscript/tmux-mighty-scroll
# https://github.com/thewtex/tmux-mem-cpu-load
# https://github.com/tmux-plugins/tmux-net-speed

# TODO - change to Ctrl-\ ???
# kkkimomaliev/tmux-keyboard-layout
# for playing
# https://github.com/aaronpowell/tmux-weather

# NOPE
# tmux-plugins/tmux-copycat         # native regex search from tmux 3.1
# christoomey/vim-tmux-navigator    # todo - look and change keys
# tmux-plugins/tmux-sidebar         # no need

# }}}
# {{{ README && CONF for plugins

# Ok. USE!
# tmux-yank
# ==============
# - prefix + y - copies text from the command line to clipboard.
# 
# - prefix + Y (shift-y) - copy pane current working directory to clipboard.
# 
# copy mode bindings:
# 
# - y - copy selection to system clipboard
# 
# - Y (shift-y) - "put" selection - equivalent to copying a selection, and
# pasting it to the command line

# Ok. USE!
# tmux-open
# =========
# In tmux copy mode:
# 
# o - "open" a highlighted selection with the system default program. open for
# OS X or xdg-open for Linux.
# 
# Ctrl-o - open a highlighted selection with the $EDITOR

# tmux-resurrect
# ===============

# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore


# Hm... SEE
# tmux-sessionist
# ================

# Sessions are a second class citizen in tmux environment:
# 
# - there are no default key bindings for creating or deleting sessions
# 
# - creating a session is cumbersome, just try tmux new-session -s name inside
# tmux (hint: you first have to detach)
# 
# - deleting (killing) current session by default detaches tmux (why?)
# 
# - no fast way for session switching when there's more than ~5 sessions
# 
# This plugin solves the above problems.

# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# Faster than the built-in prefix + s prompt for long session lists.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching tmux.
# prefix + S (shift + s) - switches to the last session.
# The same as built-in prefix + L that everyone seems to override with some other binding.
# prefix + @ - promote current pane into a new session.
# Analogous to how prefix + ! breaks current pane to a new window.

# {{{{ tmux-translator

set -g @plugin 'sainnhe/tmux-translator'
set -g @tmux-translator-width "50%"
set -g @tmux-translator-height "5r%"
set -g @tmux-translator-to 'ru'

# }}}
# {{{ FZF

set -g @plugin 'sainnhe/tmux-fzf'

# }}}
# {{{ __END__

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell ~/.tmux/plugins/tpm/tpm
# But fixes should be after!

# Plug tmux-sessionist redefine these keys TODO 
# bind-key C-Space send-prefix # press two times for C-Space to terminal
# bind-key Space last-window   # most often?

# }}}
# {{{ __DATA__

# Full-Screen Current Pane - z
# 
# Break a Pane Out into a Separate Window - !
# 
# Convert a Window into a Pane (Within Another Window)
#  
#   <P>:join-pane -s {source_window} -t {target_window}
# 
# ---
#
# TMUX automation
# 
# 1. send-keys
# 
# 2. run-shell
# 
# 3. if-shell (conditional key bindings)
#
# ---
# 
# tmuxinator - manage multiple sessions

# }}} 
